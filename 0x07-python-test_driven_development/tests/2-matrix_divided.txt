the ``2-matrix_divided`` module
===============================

using ``2-matrix_divided``
--------------------------

First import ``matrix_divided``:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test: Example matrix given:

	>>> matrix_divided([[2, 4, 6], [2, 2, 2]], 2)
	[[1.0, 2.0, 3.0], [1.0, 1.0, 1.0]]

Test: single item 2D list:

	>>> matrix_divided([[2]], 2)
	[[1.0]]

Test: negative divide:

	>>> matrix_divided([[2, 4, 6], [6, 4, 2]], -2)
	[[-1.0, -2.0, -3.0], [-3.0, -2.0, -1.0]]

Test: divide by zero:

	>>> matrix_divided([[2, 4, 6], [6, 4, 2]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Test: no first argument given:

	>>> matrix_divided(None, 1)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test: NaN in matrix:

	>>> matrix_divided([[2, 4, 6], ["hi", 4, 6]], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test: empty matrix given:

	>>> matrix_divided([[]], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test: 2D lists of different length:

	>>> matrix_divided([[2, 4, 6], [2, 4]], 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test: giving string instead of matrix:

	>>> matrix_divided("whassup", 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test: divide by string:

	>>> matrix_divided([[2, 4, 6], [6, 4, 2]], "hello")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Test: no argument call:

	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test: divide by infinity:

	>>> matrix_divided([[2, 4, 6], [6, 4, 2]], float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test: another type of empty list:

	>>> matrix_divided([[], [], []], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test: two decimal places rounding:

	>>> matrix_divided([[2.50]], 2)
	[[1.25]]

Test: NaN divide:

	>>> matrix_divided([[2, 4, 6], [6, 4, 2]], float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]
