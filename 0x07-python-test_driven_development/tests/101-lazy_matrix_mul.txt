the ``lazy_matrix_mul`` module
=========================

using ``lazy_matrix_mul``
--------------------

first import ``matrix_mul``:

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test: normal example:
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
    array([[19, 22],
            [43, 50]])

Test: unfit matrixes * 2:
    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

Test: two normal matrix:
    >>> lazy_matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
    array([[19, 22,  5],
            [43, 50, 11],
            [43, 50, 11]])

Test: an empty matrix:
    >>> lazy_matrix_mul([], [[3]])
    Traceback (most recent call last):
    ...  
    ValueError: shapes (1,0) and (1,1) not aligned: 0 (dim 1) != 1 (dim 0)

Test: an empty matrix:
    >>> lazy_matrix_mul([[]], [[3]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (1,1) not aligned: 0 (dim 1) != 1 (dim 0)


Test: str as m_a:
    >>> lazy_matrix_mul("impeach", [[9]])
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

Test: str as m_b:
    >>> lazy_matrix_mul([[8]], "trump")
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

Test: integers:
    >>> lazy_matrix_mul([1, 3, 4], [[9]])
    Traceback (most recent call last):
    ...
    TypeError: object of type 'int' has no len()

Test: str in list:
    >>> lazy_matrix_mul([["impeach"]], [[2, 4, 6]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

Test: str in m_b:
    >>> lazy_matrix_mul([[2, 4, 6]], [["impeach"]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

Test: unfit rows:
    >>> lazy_matrix_mul([[1, 2], [3, 4, 5], [3, 4]], [[5, 6, 1], [7, 8, 2]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

Test: m_b unfit row:
    >>> lazy_matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 2]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

Test:  missing 1 argument:
    >>> lazy_matrix_mul([[3]])
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

Test: missing 2 arguments:
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Test: mismatching matrices:
    >>> lazy_matrix_mul([[5, 6, 10], [7, 8]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

Test: hard str element:
    >>> lazy_matrix_mul([[5, '6'], [7, 8]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum


Test: str argument:
    >>> lazy_matrix_mul("blacklivesmatter", [[9]])
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead
